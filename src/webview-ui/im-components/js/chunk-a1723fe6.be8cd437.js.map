{"version":3,"sources":["webpack:///./src/view/Chat.vue","webpack:///src/view/Chat.vue","webpack:///./src/view/Chat.vue?a390","webpack:///./src/view/Chat.vue?28df","webpack:///./src/view/Chat.vue?1a0d"],"names":["render","_vm","this","_c","_self","staticClass","attrs","model","value","searchText","callback","$$v","expression","slot","loading","directives","name","rawName","_l","sortedChats","chat","index","key","generateChatKey","delete","showName","includes","class","isTerminalChat","isTerminalInbox","originalIndex","chatStore","activeChat","on","$event","onDelItem","onTop","nativeOn","onActiveItem","isPCTerminalChat","ref","_e","onMessageSent","staticRenderFns","components","ChatItem","ChatBox","ContainerManager","data","messageContent","group","showTerminalSelector","groupMembers","methods","$store","commit","detectPCTerminalChat","console","log","targetId","String","chatIdx","getCurrentTerminal","window","parent","acquireVsCodeApi","isVSCodeEnvironment","location","protocol","isElectronApp","electronAPI","chrome","runtime","id","uni","senderTerminal","receivingTerminal","type","message","$refs","containerManager","isCollapsed","toggleCollapse","computed","state","loadingGroupMsg","loadingPrivateMsg","chats","chatsWithIndex","map","terminalChats","normalChats","forEach","push","sort","a","b","aTerminal","bTerminal","aTime","lastSendTime","bTime","mounted","watch","handler","immediate","component"],"mappings":"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","file":"js/chunk-a1723fe6.be8cd437.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-container',{staticClass:\"chat-page\"},[_c('el-aside',{staticClass:\"chat-list-box\",attrs:{\"width\":\"260px\"}},[_c('div',{staticClass:\"chat-list-header\"},[_c('el-input',{staticClass:\"search-text\",attrs:{\"size\":\"small\",\"placeholder\":\"搜索\"},model:{value:(_vm.searchText),callback:function ($$v) {_vm.searchText=$$v},expression:\"searchText\"}},[_c('i',{staticClass:\"el-icon-search el-input__icon\",attrs:{\"slot\":\"prefix\"},slot:\"prefix\"})])],1),(_vm.loading)?_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(true),expression:\"true\"}],staticClass:\"chat-list-loading\",attrs:{\"element-loading-text\":\"消息接收中...\",\"element-loading-spinner\":\"el-icon-loading\",\"element-loading-background\":\"#F9F9F9\",\"element-loading-size\":\"24\"}}):_c('el-scrollbar',{staticClass:\"chat-list-items\"},_vm._l((_vm.sortedChats),function(chat,index){return _c('div',{key:_vm.generateChatKey(chat, index)},[_c('chat-item',{directives:[{name:\"show\",rawName:\"v-show\",value:(!chat.delete && chat.showName && chat.showName.includes(_vm.searchText)),expression:\"!chat.delete && chat.showName && chat.showName.includes(searchText)\"}],class:{\n            'terminal-chat': chat.isTerminalChat || chat.isTerminalInbox,\n            'normal-chat': !chat.isTerminalChat && !chat.isTerminalInbox\n          },attrs:{\"chat\":chat,\"index\":chat.originalIndex,\"active\":chat === _vm.chatStore.activeChat},on:{\"delete\":function($event){return _vm.onDelItem(chat.originalIndex)},\"top\":function($event){return _vm.onTop(chat.originalIndex)}},nativeOn:{\"click\":function($event){return _vm.onActiveItem(chat.originalIndex)}}})],1)}),0)],1),_c('el-container',{staticClass:\"chat-box\"},[(_vm.isPCTerminalChat)?_c('container-manager',{ref:\"containerManager\"}):_vm._e(),(_vm.chatStore.activeChat)?_c('chat-box',{attrs:{\"chat\":_vm.chatStore.activeChat},on:{\"message-sent\":_vm.onMessageSent}}):_vm._e()],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <el-container class=\"chat-page\">\n    <el-aside width=\"260px\" class=\"chat-list-box\">\n      <div class=\"chat-list-header\">\n        <el-input class=\"search-text\" size=\"small\" placeholder=\"搜索\" v-model=\"searchText\">\n          <i class=\"el-icon-search el-input__icon\" slot=\"prefix\"> </i>\n        </el-input>\n      </div>\n      <div class=\"chat-list-loading\" v-if=\"loading\" v-loading=\"true\" element-loading-text=\"消息接收中...\"\n        element-loading-spinner=\"el-icon-loading\" element-loading-background=\"#F9F9F9\" element-loading-size=\"24\">\n      </div>\n      <el-scrollbar class=\"chat-list-items\" v-else>\n        <div v-for=\"(chat, index) in sortedChats\" :key=\"generateChatKey(chat, index)\">\n          <chat-item v-show=\"!chat.delete && chat.showName && chat.showName.includes(searchText)\" :chat=\"chat\" :index=\"chat.originalIndex\"\n            @click.native=\"onActiveItem(chat.originalIndex)\" @delete=\"onDelItem(chat.originalIndex)\" @top=\"onTop(chat.originalIndex)\"\n            :active=\"chat === chatStore.activeChat\" :class=\"{\n              'terminal-chat': chat.isTerminalChat || chat.isTerminalInbox,\n              'normal-chat': !chat.isTerminalChat && !chat.isTerminalInbox\n            }\"></chat-item>\n        </div>\n      </el-scrollbar>\n    </el-aside>\n    <el-container class=\"chat-box\">\n      <!-- 容器管理组件 - 云电脑远程工作台 -->\n      <container-manager v-if=\"isPCTerminalChat\" ref=\"containerManager\"></container-manager>\n      \n      <chat-box v-if=\"chatStore.activeChat\" :chat=\"chatStore.activeChat\" @message-sent=\"onMessageSent\"></chat-box>\n    </el-container>\n  </el-container>\n</template>\n\n<script>\nimport ChatItem from \"../components/chat/ChatItem.vue\";\nimport ChatBox from \"../components/chat/ChatBox.vue\";\nimport ContainerManager from \"../components/chat/ContainerManager.vue\";\n\nexport default {\n  name: \"chat\",\n  components: {\n    ChatItem,\n    ChatBox,\n    ContainerManager\n  },\n  data() {\n    return {\n      searchText: \"\",\n      messageContent: \"\",\n      group: {},\n      // 终端间通信相关\n      showTerminalSelector: false,\n      // PC终端会话检测\n      isPCTerminalChat: false,\n      groupMembers: []\n    }\n  },\n  methods: {\n    onActiveItem(index) {\n      this.$store.commit(\"activeChat\", index);\n      this.detectPCTerminalChat();\n    },\n    \n    // 检测是否为PC终端会话\n    detectPCTerminalChat() {\n      console.log('[Chat] detectPCTerminalChat 开始检测');\n      console.log('[Chat] activeChat:', this.chatStore.activeChat);\n      \n      if (!this.chatStore.activeChat) {\n        console.log('[Chat] 没有活跃会话，isPCTerminalChat = false');\n        this.isPCTerminalChat = false;\n        return;\n      }\n      \n      const targetId = this.chatStore.activeChat.targetId;\n      console.log('[Chat] 会话信息:', {\n        targetId: targetId,\n        showName: this.chatStore.activeChat.showName\n      });\n      \n      // 简化判断：只要targetId包含\"_3\"就是PC终端会话\n      // 将targetId转换为字符串后再调用includes方法\n      if (targetId && String(targetId).includes('_3')) {\n        this.isPCTerminalChat = true;\n        console.log('[Chat] 检测到PC终端会话 (targetId包含_3)，显示容器管理');\n      } else {\n        this.isPCTerminalChat = false;\n        console.log('[Chat] 非PC终端会话，不显示容器管理');\n      }\n      \n      console.log('[Chat] 最终 isPCTerminalChat =', this.isPCTerminalChat);\n    },\n    onDelItem(index) {\n      this.$store.commit(\"removeChat\", index);\n    },\n    onTop(chatIdx) {\n      this.$store.commit(\"moveTop\", chatIdx);\n    },\n    \n    // 获取当前终端类型\n    getCurrentTerminal() {\n      // 根据环境判断当前终端类型\n      if (typeof window !== 'undefined') {\n        // 检测VSCode环境\n        if (window.parent !== window || \n          window.acquireVsCodeApi || \n          window.isVSCodeEnvironment || \n          (window.location && window.location.protocol === 'vscode-webview:')) {\n          return 2; // VSCode\n        }\n        // 检测PC客户端环境\n        if (window.isElectronApp || window.electronAPI) {\n          return 3; // PC\n        }\n        // 检测插件环境\n        if (window.chrome && window.chrome.runtime && window.chrome.runtime.id) {\n          return 4; // 插件\n        }\n        return 0; // Web\n      }\n      // 移动端环境\n      if (typeof uni !== 'undefined') {\n        return 1; // App\n      }\n      return 0; // 默认Web\n    },\n    \n    // 生成会话显示Key（用于Vue的key属性）\n    generateChatKey(chat, index) {\n      if (chat.isTerminalChat) {\n        return `terminal-chat-${chat.senderTerminal}-${chat.targetId}`;\n      } else if (chat.isTerminalInbox) {\n        return `terminal-inbox-${chat.receivingTerminal}-${chat.targetId}`;\n      } else {\n        return `${chat.type}-${chat.targetId}-${index}`;\n      }\n    },\n    \n    // 消息发送处理\n    onMessageSent(message) {\n      console.log('消息已发送:', message);\n      \n      // 如果容器管理面板存在且未折叠，则自动折叠\n      if (this.$refs.containerManager && !this.$refs.containerManager.isCollapsed) {\n        console.log('[Chat] 发送消息，自动折叠容器管理面板');\n        this.$refs.containerManager.toggleCollapse();\n      }\n    }\n\n  },\n  computed: {\n    chatStore() {\n      return this.$store.state.chatStore;\n    },\n    loading() {\n      return this.chatStore.loadingGroupMsg || this.chatStore.loadingPrivateMsg\n    },\n    // 排序后的会话列表（终端会话置顶）\n    sortedChats() {\n      const chats = this.chatStore.chats || [];\n      \n      // 添加原始索引，用于保持操作的正确映射\n      const chatsWithIndex = chats.map((chat, index) => ({\n        ...chat,\n        originalIndex: index\n      }));\n      \n      // 分离终端会话和普通会话\n      const terminalChats = [];\n      const normalChats = [];\n      \n      chatsWithIndex.forEach(chat => {\n        if (chat.isTerminalChat || chat.isTerminalInbox) {\n          terminalChats.push(chat);\n        } else {\n          normalChats.push(chat);\n        }\n      });\n      \n      // 终端会话按终端类型排序\n      terminalChats.sort((a, b) => {\n        const aTerminal = a.senderTerminal || a.receivingTerminal || 0;\n        const bTerminal = b.senderTerminal || b.receivingTerminal || 0;\n        return aTerminal - bTerminal;\n      });\n      \n      // 普通会话按最后发送时间排序\n      normalChats.sort((a, b) => {\n        const aTime = a.lastSendTime || 0;\n        const bTime = b.lastSendTime || 0;\n        return bTime - aTime;\n      });\n      \n      // 返回合并后的列表：终端会话在前，普通会话在后\n      return [...terminalChats, ...normalChats];\n    }\n  },\n  mounted() {\n    // 初始化时检测当前活跃会话\n    this.detectPCTerminalChat();\n  },\n  watch: {\n    'chatStore.activeChat': {\n      handler() {\n        // 当活跃会话改变时，重新检测\n        this.detectPCTerminalChat();\n      },\n      immediate: true\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.chat-page {\n  .chat-list-box {\n    display: flex;\n    flex-direction: column;\n    background: var(--im-background);\n\n    .chat-list-header {\n      height: 50px;\n      display: flex;\n      align-items: center;\n      padding: 0 8px;\n    }\n\n    .chat-list-loading {\n      height: 50px;\n      background-color: #eee;\n\n      .el-icon-loading {\n        font-size: 24px;\n        color: var(--im-text-color-light);\n      }\n\n      .el-loading-text {\n        color: var(--im-text-color-light);\n      }\n\n      .chat-loading-box {\n        height: 100%;\n      }\n    }\n\n    .chat-list-items {\n      flex: 1;\n      \n      // 终端会话样式\n      ::v-deep .terminal-chat {\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        border-left: 3px solid #667eea;\n        \n        .chat-item-wrapper {\n          background: rgba(255, 255, 255, 0.95);\n        }\n        \n        &:hover {\n          background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);\n        }\n        \n        // 添加终端标识图标\n        &::before {\n          content: \"🖥️\";\n          position: absolute;\n          right: 10px;\n          top: 50%;\n          transform: translateY(-50%);\n          font-size: 16px;\n          opacity: 0.7;\n        }\n      }\n      \n      // 普通会话样式\n      ::v-deep .normal-chat {\n        background: #fff;\n        \n        &:hover {\n          background: #f5f7fa;\n        }\n      }\n    }\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??ref--13-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chat.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??ref--13-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chat.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Chat.vue?vue&type=template&id=21486f8a\"\nimport script from \"./Chat.vue?vue&type=script&lang=js\"\nexport * from \"./Chat.vue?vue&type=script&lang=js\"\nimport style0 from \"./Chat.vue?vue&type=style&index=0&id=21486f8a&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chat.vue?vue&type=style&index=0&id=21486f8a&prod&lang=scss\""],"sourceRoot":""}